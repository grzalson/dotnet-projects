// <auto-generated />
using System;
using MechanicKol.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MechanicKol.Migrations
{
    [DbContext(typeof(MyDbContext))]
    partial class MyDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MechanicKol.Models.Car", b =>
                {
                    b.Property<int>("IdCar")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCar"));

                    b.Property<int>("IdMake")
                        .HasColumnType("int");

                    b.Property<DateTime>("ProductionYear")
                        .HasColumnType("date");

                    b.Property<string>("RegistrationPlate")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("IdCar");

                    b.HasIndex("IdMake");

                    b.ToTable("Cars");

                    b.HasData(
                        new
                        {
                            IdCar = 1,
                            IdMake = 1,
                            ProductionYear = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RegistrationPlate = "ABC123"
                        },
                        new
                        {
                            IdCar = 2,
                            IdMake = 2,
                            ProductionYear = new DateTime(2020, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RegistrationPlate = "XYZ789"
                        },
                        new
                        {
                            IdCar = 3,
                            IdMake = 3,
                            ProductionYear = new DateTime(2018, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RegistrationPlate = "DEF456"
                        });
                });

            modelBuilder.Entity("MechanicKol.Models.Make", b =>
                {
                    b.Property<int>("IdMake")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMake"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("IdMake");

                    b.ToTable("Makes");

                    b.HasData(
                        new
                        {
                            IdMake = 1,
                            Name = "Toyota"
                        },
                        new
                        {
                            IdMake = 2,
                            Name = "Honda"
                        },
                        new
                        {
                            IdMake = 3,
                            Name = "BMW"
                        });
                });

            modelBuilder.Entity("MechanicKol.Models.Mechanic", b =>
                {
                    b.Property<int>("IdMechanic")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMechanic"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("IdSpecialization")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Nickname")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("IdMechanic");

                    b.HasIndex("IdSpecialization");

                    b.ToTable("Mechanics");

                    b.HasData(
                        new
                        {
                            IdMechanic = 1,
                            FirstName = "John",
                            IdSpecialization = 1,
                            LastName = "Doe",
                            Nickname = "JD"
                        },
                        new
                        {
                            IdMechanic = 2,
                            FirstName = "Jane",
                            IdSpecialization = 2,
                            LastName = "Smith",
                            Nickname = "JS"
                        },
                        new
                        {
                            IdMechanic = 3,
                            FirstName = "Robert",
                            IdSpecialization = 3,
                            LastName = "Johnson"
                        });
                });

            modelBuilder.Entity("MechanicKol.Models.MechanicCar", b =>
                {
                    b.Property<int>("IdMechanic")
                        .HasColumnType("int");

                    b.Property<int>("IdCar")
                        .HasColumnType("int");

                    b.HasKey("IdMechanic", "IdCar");

                    b.HasIndex("IdCar");

                    b.ToTable("MechanicCars");

                    b.HasData(
                        new
                        {
                            IdMechanic = 1,
                            IdCar = 1
                        },
                        new
                        {
                            IdMechanic = 1,
                            IdCar = 2
                        },
                        new
                        {
                            IdMechanic = 2,
                            IdCar = 3
                        });
                });

            modelBuilder.Entity("MechanicKol.Models.Specialization", b =>
                {
                    b.Property<int>("IdSpecialization")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdSpecialization"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("IdSpecialization");

                    b.ToTable("Specializations");

                    b.HasData(
                        new
                        {
                            IdSpecialization = 1,
                            Name = "Electronics"
                        },
                        new
                        {
                            IdSpecialization = 2,
                            Name = "Engine"
                        },
                        new
                        {
                            IdSpecialization = 3,
                            Name = "Bodywork"
                        });
                });

            modelBuilder.Entity("MechanicKol.Models.Car", b =>
                {
                    b.HasOne("MechanicKol.Models.Make", "Make")
                        .WithMany("Cars")
                        .HasForeignKey("IdMake")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("Make");
                });

            modelBuilder.Entity("MechanicKol.Models.Mechanic", b =>
                {
                    b.HasOne("MechanicKol.Models.Specialization", "Specialization")
                        .WithMany("Mechanics")
                        .HasForeignKey("IdSpecialization")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("Specialization");
                });

            modelBuilder.Entity("MechanicKol.Models.MechanicCar", b =>
                {
                    b.HasOne("MechanicKol.Models.Car", "Car")
                        .WithMany("MechanicCars")
                        .HasForeignKey("IdCar")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("MechanicKol.Models.Mechanic", "Mechanic")
                        .WithMany("MechanicCars")
                        .HasForeignKey("IdMechanic")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("Car");

                    b.Navigation("Mechanic");
                });

            modelBuilder.Entity("MechanicKol.Models.Car", b =>
                {
                    b.Navigation("MechanicCars");
                });

            modelBuilder.Entity("MechanicKol.Models.Make", b =>
                {
                    b.Navigation("Cars");
                });

            modelBuilder.Entity("MechanicKol.Models.Mechanic", b =>
                {
                    b.Navigation("MechanicCars");
                });

            modelBuilder.Entity("MechanicKol.Models.Specialization", b =>
                {
                    b.Navigation("Mechanics");
                });
#pragma warning restore 612, 618
        }
    }
}
